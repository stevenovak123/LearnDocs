"use strict";(self.webpackChunkmy_learnings=self.webpackChunkmy_learnings||[]).push([[103],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),d=n,y=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return r?a.createElement(y,l(l({ref:t},u),{},{components:r})):a.createElement(y,l({ref:t},u))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8424:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:6,Title:"Arrays",Description:"Information on Arrays in JavaScript"},l="Arrays",i={unversionedId:"JavaScript/Arrays",id:"JavaScript/Arrays",title:"Arrays",description:"Array is a datastructure.",source:"@site/docs/JavaScript/Arrays.md",sourceDirName:"JavaScript",slug:"/JavaScript/Arrays",permalink:"/learndocs/JavaScript/Arrays",draft:!1,editUrl:"https://github.com/stevenovak123/learndocs/tree/master/docs/JavaScript/Arrays.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,Title:"Arrays",Description:"Information on Arrays in JavaScript"},sidebar:"tutorialSidebar",previous:{title:"Functions",permalink:"/learndocs/JavaScript/Functions"},next:{title:"Objects",permalink:"/learndocs/JavaScript/Objects"}},s={},p=[{value:"Array Operations",id:"array-operations",level:2},{value:"Array Destructuring",id:"array-destructuring",level:2},{value:"Spread operator &amp; Rest pattern",id:"spread-operator--rest-pattern",level:2},{value:"for-of loop",id:"for-of-loop",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"arrays"},"Arrays"),(0,n.kt)("p",null,"Array is a datastructure.\nIt is big container in which we can throw variables and store them together.\nThere are different ways that an array can be created"),(0,n.kt)("p",null,"Example"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"// literal syntax\nconst friends = ['Steve', 'Peter', 'Paul'];\nconst years = new Array(1991, 1984, 2001, 2003);\n")),(0,n.kt)("p",null,"Arrays are 0 indexed."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"console.log(friends[0]); // output => Steve\nconsole.log(friends[2]); // output => Paul\n")),(0,n.kt)("h2",{id:"array-operations"},"Array Operations"),(0,n.kt)("p",null,"There are multiple array methods. Often used are"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"length : gives the size of the array."),(0,n.kt)("li",{parentName:"ol"},"push : adds an element to the end of the array. Returns the length of the array."),(0,n.kt)("li",{parentName:"ol"},"unshift : adds to the start of the array."),(0,n.kt)("li",{parentName:"ol"},"pop : remove the last element of the array. Returns the ",(0,n.kt)("em",{parentName:"li"},"popped")," element."),(0,n.kt)("li",{parentName:"ol"},"shift : remove the first element of the array. Returns the removed element."),(0,n.kt)("li",{parentName:"ol"},"indexOf : return the index at which the element is located."),(0,n.kt)("li",{parentName:"ol"},"includes : returns a boolean depending on the element being present or not. Uses strict equality ",(0,n.kt)("inlineCode",{parentName:"li"},"==="),".")),(0,n.kt)("h2",{id:"array-destructuring"},"Array Destructuring"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays into distnct variables.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The original array is not affected.")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"let a, b;\n[a, b] = [10, 20];\nconsole.log(a); // output => 10\n")))),(0,n.kt)("h2",{id:"spread-operator--rest-pattern"},"Spread operator & Rest pattern"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Spread operators helps in spreading the array into a single variable.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Syntax is ",(0,n.kt)("inlineCode",{parentName:"li"},"[...]"),"."),(0,n.kt)("li",{parentName:"ul"},"It expands an array into its elements.")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const arr = [7, 6, 8];\nconst newArr = [1, 2, 3, ...arr];\nconsole.log(newArr); //output=> 1,2,3,7,6,8\n")),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"It helps creates a shallow copy of the array."),(0,n.kt)("li",{parentName:"ul"},"Join 2 or more arrays."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Rest pattern")," has the same syntax.\n-It is used to pack all elements in an array.\n-Used on the left of the assignment.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"It must be the last element."),(0,n.kt)("li",{parentName:"ul"},"Only 1 rest pattern in an assignment.")),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const [a, b, ...others] = [1, 2, 3, 4, 5, 6];\nconsole.log(a, b); //output => 1,2\nconsole.log(others); // output => 3,4,5,6\n")))),(0,n.kt)("h2",{id:"for-of-loop"},"for-of loop"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"This is new way of looping over arrays."),(0,n.kt)("li",{parentName:"ul"},"It lets you loop over iterables."),(0,n.kt)("li",{parentName:"ul"},"It gives you the value.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const items = ['Steve', 'Dsouza', 'JavaScript'];\nfor (const name of item) {\n  console.log(name);\n} // ouput=> Steve Dsouza JavaScript\n")))}m.isMDXComponent=!0}}]);