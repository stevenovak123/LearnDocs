"use strict";(self.webpackChunkmy_learnings=self.webpackChunkmy_learnings||[]).push([[200],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),f=a,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[p]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7217:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={sidebar_position:5,Title:"Functions in JS",Description:"Information on Functions in JavaScript"},i="Functions",c={unversionedId:"JavaScript/Functions",id:"JavaScript/Functions",title:"Functions",description:"A function is simply a chunk of code that can be used over and over again.",source:"@site/docs/JavaScript/Functions.md",sourceDirName:"JavaScript",slug:"/JavaScript/Functions",permalink:"/learndocs/JavaScript/Functions",draft:!1,editUrl:"https://github.com/stevenovak123/learndocs/tree/master/docs/JavaScript/Functions.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,Title:"Functions in JS",Description:"Information on Functions in JavaScript"},sidebar:"tutorialSidebar",previous:{title:"Strings and Template Literals",permalink:"/learndocs/JavaScript/Strings"},next:{title:"Arrays",permalink:"/learndocs/JavaScript/Arrays"}},l={},s=[{value:"Function decalaration",id:"function-decalaration",level:2},{value:"Function Expression",id:"function-expression",level:2},{value:"Arrow Functions",id:"arrow-functions",level:2}],u={toc:s},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"functions"},"Functions"),(0,a.kt)("p",null,"A function is simply a chunk of code that can be used over and over again."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Example"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'function logger() {\n  console.log("My name is steve");\n}\n// Calling / running /invoking functions\nlogger();\n')),(0,a.kt)("p",{parentName:"blockquote"},"The function can be called n number of times.")),(0,a.kt)("p",null,"Function can take data and return data. This data can be in any form."),(0,a.kt)("h2",{id:"function-decalaration"},"Function decalaration"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Declaration"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function abcd(data) {\n  return 2023 - data;\n}\nconst declaration = abcd(2001);\n"))),(0,a.kt)("h2",{id:"function-expression"},"Function Expression"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Expression"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const efgh = function (data) {\n  return 2023 - data;\n};\nconst expression = efgh(2001);\n"))),(0,a.kt)("p",null,"The difference between declaration and expression is that we can call declarations before they are defined in code. Order of ",(0,a.kt)("inlineCode",{parentName:"p"},"const declaration=abcd(2001)")," should not matter."),(0,a.kt)("h2",{id:"arrow-functions"},"Arrow Functions"),(0,a.kt)("p",null,"Arrow functions are just a faster way of writing functions. here return happens implicitly. (No need to mention return when its one line of code and one parameter)"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Example"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const ijkl = (data) => 2023 - data;\nconst arrow = ijkl(2001);\nconst yearsUntilRetire = (data) => {\n  const age = 2023 - data;\n  const retirement = 65 - age;\n  return retirement;\n};\nconsole.log(yearsUntilRetire(2001));\n"))))}d.isMDXComponent=!0}}]);